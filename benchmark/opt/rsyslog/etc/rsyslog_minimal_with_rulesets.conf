# A minimal representation of the project's rsyslog pipeline with most options stripped out
# Intedned for testing input and ouput performance options like threads and batch deque, etc
# This example follows the project's split queues and ruleset approach, but with mimimal config

global(
	workDirectory="/tmp"
)

# Enable stats
module(
  load="impstats"
  interval="1"
  ResetCounters="on"
  log.syslog="off"
  Format="json"
  log.file="/tmp/test/syslog_perf/data/rsyslog_pstats.log"
)

dyn_stats(
  name="msg_per_host"
)

# Template for errors from dynamic stat incrimenting
template(name="DynStatsError" type="string" string="hostname=%hostname% error=%$.inc_status%\n")

# Simple raw message template (might be useful for passing on messages unprocessed)
template(name="RawMsg" type="string" string="%rawmsg%\n")

#UDP
module(
  load="imudp"
  threads="1"
)

input(
  type="imudp"
  port="10514"
  ruleset="remote_in_udp"
)

ruleset(name="remote_in_udp") {
  call central
}

#TCP
module(
  load="imptcp"
  threads="1"
  #processOnPoller="off"
)

input(
  type="imptcp"
  port="10601"
  ruleset="remote_in_tcp"
)

ruleset(name="remote_in_tcp") {
  call central
}

# Central rulset to filter and enrich between inputs and outputs
ruleset(name="central") {
  set $.inc_status = dyn_inc("msg_per_host", $hostname);
  if ($.inc_status != 0) then { 
    action(name="dyn_stat_inc_error" type="omfile" file="/tmp/test/syslog_perf/data/dynstats.err.log" template="DynStatsError")
  }
  call out_file
}

# Output
ruleset(name="out_file")
{
  action(
    name="out_file"
    type="omfile"
    Template="RawMsg"
    File="/tmp/test/syslog_perf/data/rsyslog.log"
  )
}
